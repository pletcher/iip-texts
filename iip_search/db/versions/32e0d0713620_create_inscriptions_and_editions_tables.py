"""Create inscriptions and editions tables

Revision ID: 32e0d0713620
Revises: 
Create Date: 2023-07-13 16:21:56.679319

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.dialects.postgresql import TSVECTOR
from sqlalchemy.types import TypeDecorator

class TSVector(TypeDecorator):
    impl = TSVECTOR


# revision identifiers, used by Alembic.
revision = '32e0d0713620'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('parsed_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('editions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('edition_type', sa.Enum('DIPLOMATIC', 'TRANSCRIPTION', 'TRANSCRIPTION_SEGMENTED', 'TRANSLATION', name='editiontype'), nullable=False),
    sa.Column('inscription_id', sa.Integer(), nullable=True),
    sa.Column('raw_xml', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('searchable_text', TSVector(), sa.Computed(
        """
        to_tsvector('english', regexp_replace(normalize(text, NFKD), '[\u0300-\u036f]', '', 'g'))
        """,
        persisted=True
    )),
    sa.ForeignKeyConstraint(['inscription_id'], ['inscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('editions')
    op.drop_table('inscriptions')
    # ### end Alembic commands ###
